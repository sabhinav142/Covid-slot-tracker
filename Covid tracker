import requests
from datetime import datetime
import time
from notify_run import Notify


# Putting generated URL as a comment for reference
# https://notify.run/c/g9xzAC7NMZyYsO07

notify = Notify()
STATE = "Bihar"  # Write your STATE here!
STATE_ID = 0
DISTRICT = "Madhepura"  # Write your DISTRICT here!
DISTRICT_ID = 0
# Setting AGE = 45 here in order to show the live notification demo
AGE = 18  # Write the minimum age group for which you wanna get notified!
headers = {
    "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36"
}
STATE_ID_ENDPOINT = "https://cdn-api.co-vin.in/api/v2/admin/location/states"
DISTRICT_ID_ENDPOINT = "https://cdn-api.co-vin.in/api/v2/admin/location/districts"
ENDPOINT = "https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByDistrict"
todays_date = datetime.now()
DATE = f"{todays_date.day}-{todays_date.month}-{todays_date.year}"


response = requests.get(f"{STATE_ID_ENDPOINT}", headers=headers)
states = response.json()["states"]

for state in states:
    if state["state_name"] == STATE:
        STATE_ID = state["state_id"]
        break

if STATE_ID == 0:
    print(f"There is no state named {STATE}")
    exit()

response = requests.get(f"{DISTRICT_ID_ENDPOINT}/{STATE_ID}", headers=headers)
districts = response.json()["districts"]

for district in districts:
    if district["district_name"] == DISTRICT:
        DISTRICT_ID = district["district_id"]
        break

if DISTRICT_ID == 0:
    print(f"There is no district named {DISTRICT} in state {STATE}")
    exit()


def check_vaccine():
    response = requests.get(f"{ENDPOINT}?district_id={DISTRICT_ID}&date={DATE}", headers=headers)

    vaccine_slots = response.json()
    slot_available = False
    center_count = 1
    slots_data = ""
    for center in vaccine_slots["centers"]:
        for session in center["sessions"]:
            if session["min_age_limit"] <= AGE and len(session["slots"]) > 0 and session["available_capacity"] > 0:
                slot_available = True
                slots_data += f"\n{center_count}) {center['name']} on {session['date']}"
                center_count += 1
                print(f"Center Name\t{center['name']}")
                print(f"Slots available\t{session['slots']}")
                print("-----------------------------------")
                break

    if slot_available:
        notification_data = f"HURRY! Vaccine is availabe for age {AGE} at these centers: {slots_data}"
        notify.send(notification_data)
    else:
        print(f"\nNO Slot Available for age {AGE} in this week as of {datetime.now()}")
        return False

    return True


if __name__ == "__main__":
    while True:
        if check_vaccine():
            break
        time.sleep(900)  # Check for vaccine availability every 15 mins
